{% comment %}
  Product Visibility Control Block
  Add this to any section that shows products
{% endcomment %}

{%- if block.settings.enabled -%}

<style>
  /* Visibility styles with unique block ID to avoid conflicts */
  .pvm-hidden-{{ block.id }} {
    position: relative !important;
    overflow: hidden !important;
  }
  
  .pvm-hidden-{{ block.id }} > *:not(.pvm-overlay-{{ block.id }}) {
    filter: blur({{ block.settings.blur }}px) !important;
    opacity: 0.5 !important;
    pointer-events: none !important;
  }
  
  .pvm-overlay-{{ block.id }} {
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    width: 100% !important;
    height: 100% !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    z-index: 100 !important;
  }
  
  .pvm-message-{{ block.id }} {
    background: {{ block.settings.overlay_bg }} !important;
    color: {{ block.settings.overlay_color }} !important;
    padding: 20px !important;
    border-radius: 8px !important;
    text-align: center !important;
    max-width: 280px !important;
    box-shadow: 0 4px 20px rgba(0,0,0,0.15) !important;
  }
  
  .pvm-icon-{{ block.id }} {
    font-size: 32px !important;
    margin-bottom: 10px !important;
  }
  
  .pvm-btn-{{ block.id }} {
    display: inline-block !important;
    margin-top: 15px !important;
    padding: 10px 24px !important;
    background: {{ block.settings.btn_bg }} !important;
    color: {{ block.settings.btn_color }} !important;
    text-decoration: none !important;
    border-radius: 4px !important;
    font-weight: 600 !important;
    transition: opacity 0.3s !important;
  }
  
  .pvm-btn-{{ block.id }}:hover {
    opacity: 0.9 !important;
    text-decoration: none !important;
  }
</style>

<script>
(function() {
  console.log('PVM Block: Initializing for block {{ block.id }}');
  
  // List of products to hide - using both ID and handle
  const hiddenProducts = {
    {% for product in collections.all.products limit: 2000 %}
      {%- assign is_hidden = product.metafields.visibility_manager.hidden -%}
      {%- if is_hidden == true -%}
        '{{ product.id }}': '{{ product.handle }}',
      {%- endif -%}
    {% endfor %}
  };
  
  const productCount = Object.keys(hiddenProducts).length;
  console.log(`PVM Block: Found ${productCount} products to hide`);
  
  if (productCount === 0) {
    console.log('PVM Block: No products marked as hidden');
    return;
  }
  
  function processProducts() {
    let hiddenCount = 0;
    
    // Find all product elements on the page
    const productSelectors = [
      'a[href*="/products/"]',
      '[data-product-handle]',
      '[data-product-id]',
      '.product-item',
      '.grid__item'
    ];
    
    productSelectors.forEach(selector => {
      document.querySelectorAll(selector).forEach(element => {
        // Check if already processed
        if (element.classList.contains(`pvm-hidden-{{ block.id }}`)) return;
        if (element.querySelector('.pvm-overlay-{{ block.id }}')) return;
        
        // Try to find product identifier
        let productId = null;
        let productHandle = null;
        
        // Check data attributes
        productId = element.getAttribute('data-product-id') || 
                   element.getAttribute('data-product') ||
                   element.dataset.productId;
        
        productHandle = element.getAttribute('data-product-handle') ||
                       element.dataset.productHandle;
        
        // Check links
        if (!productId && !productHandle) {
          const link = element.tagName === 'A' ? element : element.querySelector('a[href*="/products/"]');
          if (link) {
            const href = link.getAttribute('href') || link.href;
            // Extract handle from URL
            const match = href.match(/\/products\/([^\/\?#]+)/);
            if (match) {
              productHandle = match[1];
            }
          }
        }
        
        // Check if this product should be hidden
        let shouldHide = false;
        
        // Check by ID
        if (productId && hiddenProducts[productId]) {
          shouldHide = true;
          console.log(`PVM Block: Hiding product by ID: ${productId}`);
        }
        
        // Check by handle
        if (!shouldHide && productHandle) {
          for (let [id, handle] of Object.entries(hiddenProducts)) {
            if (handle === productHandle) {
              shouldHide = true;
              console.log(`PVM Block: Hiding product by handle: ${productHandle}`);
              break;
            }
          }
        }
        
        if (shouldHide) {
          // Find the actual product card container
          let card = element;
          
          // If this is just a link, find its container
          if (element.tagName === 'A') {
            // Walk up to find the product card
            let parent = element.parentElement;
            let levels = 0;
            while (parent && levels < 5) {
              // Check if this looks like a product card
              if (parent.classList.contains('grid__item') ||
                  parent.classList.contains('product-item') ||
                  parent.classList.contains('card') ||
                  parent.tagName === 'LI' ||
                  parent.tagName === 'ARTICLE') {
                card = parent;
                break;
              }
              parent = parent.parentElement;
              levels++;
            }
          }
          
          // Apply hiding
          card.classList.add(`pvm-hidden-{{ block.id }}`);
          
          // Add overlay if not already added
          if (!card.querySelector('.pvm-overlay-{{ block.id }}')) {
            const overlay = document.createElement('div');
            overlay.className = 'pvm-overlay-{{ block.id }}';
            overlay.innerHTML = `
              <div class="pvm-message-{{ block.id }}">
                <div class="pvm-icon-{{ block.id }}">{{ block.settings.icon | escape }}</div>
                <div>{{ block.settings.message | escape }}</div>
                {% if block.settings.btn_text and block.settings.btn_url %}
                  <a href="{{ block.settings.btn_url }}" class="pvm-btn-{{ block.id }}">
                    {{ block.settings.btn_text | escape }}
                  </a>
                {% endif %}
              </div>
            `;
            card.appendChild(overlay);
            
            // Disable all other links in the card
            card.querySelectorAll('a:not(.pvm-btn-{{ block.id }})').forEach(link => {
              link.style.pointerEvents = 'none';
              link.style.cursor = 'not-allowed';
              link.onclick = (e) => {
                e.preventDefault();
                e.stopPropagation();
                return false;
              };
            });
            
            // Disable forms
            card.querySelectorAll('form').forEach(form => {
              form.onsubmit = (e) => {
                e.preventDefault();
                return false;
              };
            });
            
            hiddenCount++;
          }
        }
      });
    });
    
    console.log(`PVM Block: Hidden ${hiddenCount} products`);
  }
  
  // Run immediately
  processProducts();
  
  // Run when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', processProducts);
  }
  
  // Run after a short delay to catch lazy-loaded products
  setTimeout(processProducts, 500);
  setTimeout(processProducts, 1500);
  
  // Watch for dynamic content
  const observer = new MutationObserver(() => {
    clearTimeout(window.pvmDebounce);
    window.pvmDebounce = setTimeout(processProducts, 200);
  });
  
  observer.observe(document.body, {
    childList: true,
    subtree: true
  });
  
  // Theme editor support
  document.addEventListener('shopify:section:load', processProducts);
  document.addEventListener('shopify:block:select', processProducts);
  document.addEventListener('shopify:block:deselect', processProducts);
  
})();
</script>

{%- endif -%}

{% schema %}
{
  "name": "Product Visibility",
  "target": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "enabled",
      "label": "Enable",
      "default": true
    },
    {
      "type": "text",
      "id": "icon",
      "label": "Icon",
      "default": "ðŸ”’"
    },
    {
      "type": "text",
      "id": "message",
      "label": "Message",
      "default": "VIP Members Only"
    },
    {
      "type": "text",
      "id": "btn_text",
      "label": "Button text",
      "default": "Get VIP Access"
    },
    {
      "type": "url",
      "id": "btn_url",
      "label": "Button link"
    },
    {
      "type": "range",
      "id": "blur",
      "label": "Blur amount",
      "min": 0,
      "max": 20,
      "step": 1,
      "default": 8
    },
    {
      "type": "color",
      "id": "overlay_bg",
      "label": "Overlay background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "overlay_color",
      "label": "Overlay text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "btn_bg",
      "label": "Button background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "btn_color",
      "label": "Button text color",
      "default": "#ffffff"
    }
  ]
}
{% endschema %}